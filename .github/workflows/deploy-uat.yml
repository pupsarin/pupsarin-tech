name: Deploy to GitHub Pages - UAT

on:
  push:
    branches:
      - uat
  pull_request:
    branches:
      - uat

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint || echo "Linting completed with warnings"
        continue-on-error: true
        
      - name: Run tests (if available)
        run: npm run test || echo "No tests configured"
        continue-on-error: true
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: test
    
    # Only deploy on push to uat branch, not on pull requests
    if: github.ref == 'refs/heads/uat'
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: uat
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'uat',
              description: 'UAT deployment to GitHub Pages',
              auto_merge: false,
              required_contexts: []
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: '${{ steps.deployment.outputs.page_url }}',
              description: 'Successfully deployed to GitHub Pages'
            });
            
      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ UAT deployment successful!"
          echo "üåê Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üì¶ Build: ${{ github.sha }}"
          echo "üè∑Ô∏è Tag: uat-${{ github.run_number }}"
          
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå UAT deployment failed!"
          echo "üîç Check the logs above for details"
          echo "üì¶ Build: ${{ github.sha }}" 